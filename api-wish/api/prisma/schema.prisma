generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String
  password String
  sex Boolean
  ageGroup Int
  whishlist Wishlist[]
  likedCategories UserCategories[]
  notifications Notification[]
}

model Notification {
  id Int @id @default(autoincrement())
  message String
  time DateTime
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Wishlist {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  products ProductsInWishlist[]
}

model Product {
  id Int @id @default(autoincrement())
  name String
  price Int
  discount Int
  targetAgeGroup Int
  category ProductsCategory[]
  wishlists ProductsInWishlist[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  products ProductsCategory[]
  likedByUser UserCategories[]
}

// Many to many relations

model ProductsCategory {
  products Product @relation(fields: [productId], references: [id])
  productId Int
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  @@id([productId, categoryId])
}

model ProductsInWishlist {
  products Product @relation(fields: [productId], references: [id])
  productId Int
  wishlist Wishlist @relation(fields: [wishlistId], references: [id])
  wishlistId Int
  @@id([productId, wishlistId])
}

model UserCategories {
  user User @relation(fields: [userId], references: [id])
  userId Int
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  @@id([userId, categoryId])
}
